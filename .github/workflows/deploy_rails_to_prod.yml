name: Deploy rails to prod

# Workflow will run on push to main branch
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-push-container:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(git rev-parse --abbrev-ref HEAD)"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push Docker image
        uses: docker/build-push-action@v1
        with:
          build_args: GIT_COMMIT_SHA=${{ steps.vars.outputs.sha_short }},GIT_BRANCH=${{ steps.vars.outputs.branch }}
          path: ./ghre-rails
          dockerfile: ./ghre-rails/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dfedigital/get-help-with-remote-education-prod
          tags: latest

  deploy-to-paas:
    defaults:
      run:
        working-directory: ghre-rails
    runs-on: ubuntu-latest
    needs: build-and-push-container
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install CloudFoundry CLI
        shell: bash
        id: install-cf-cli
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf7-cli

      - name: Use Terraform 0.14.2
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.2

      - name: Terraform init, plan & apply
        id: terraform_deploy
        run: |
          terraform init -reconfigure -upgrade=true -backend-config=bucket="${{ secrets.PRIVATE_S3_BUCKET_PROD }}"
          terraform plan -var-file workspace-variables/prod.tfvars
          terraform apply -auto-approve -var-file workspace-variables/prod.tfvars
        working-directory: terraform
        env:
          TF_VAR_monitoring_username: ${{ secrets.MONITORING_USER }}
          TF_VAR_monitoring_password: ${{ secrets.MONITORING_PASSWORD }}
          TF_VAR_grafana_admin_password: ${{ secrets.GRAFANA_ADMIN_PASSWORD_PROD }}
          TF_VAR_statuscake_username: ${{ secrets.STATUSCAKE_USERNAME }}
          TF_VAR_statuscake_apikey: ${{ secrets.STATUSCAKE_APIKEY }}
          TF_VAR_paas_username: ${{ secrets.CF_USER_PROD }}
          TF_VAR_paas_password: ${{ secrets.CF_PASSWORD_PROD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}

      - name: Deploy to Gov.uk PaaS
        id: deploy-to-paas
        shell: bash
        env:
          CF_DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          CF_DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          cf api https://api.london.cloud.service.gov.uk
          cf auth "${{ secrets.CF_USER_PROD }}" "${{ secrets.CF_PASSWORD_PROD }}"
          cf target -o dfe -s get-help-with-remote-education-prod
          cf push -f ./config/manifests/prod_manifest.yml --docker-image dfedigital/get-help-with-remote-education-prod:latest --strategy rolling
